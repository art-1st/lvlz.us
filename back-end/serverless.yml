service:
  name: sls-api-lovelyzinus

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-plugin-warmup
  
custom:
  stage: ${opt:stage, self:provider.stage}
  enviroments:
    prod: production
    staging: staging
    dev: develop
  domains:
    prod: api.lovelyzin.us
    staging: staging-api.lovelyzin.us
    dev: dev-api.lovelyzin.us

  customDomain:
    basePath: ""
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: "${self:custom.stage}"
    certificateName: lovelyzin.us
    createRoute53Record: true
    endpointType: edge

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-2
  stage: dev
  environment:
    NODE_ENV: ${self:custom.enviroments.${self:custom.stage}}
    DB_HOST: ${file(./env.js):env.DB_HOST}
    DB_USER: ${file(./env.js):env.DB_USER}
    DB_PASSWORD: ${file(./env.js):env.DB_PASSWORD}
    DB_DATABASE: ${file(./env.js):env.DB_DATABASE}
    NCP_AI_CLIENT_ID: ${file(./env.js):env.NCP_AI_CLIENT_ID}
    NCP_AI_CLIENT_SECRET: ${file(./env.js):env.NCP_AI_CLIENT_SECRET}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "ec2:CreateNetworkInterface"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DetachNetworkInterface"
        - "ec2:DeleteNetworkInterface"
      Resource: "*"

functions:
  api:
    handler: src/lambda.handler
    memorySize: 128
    timeout: 20s
    warmup: true
    events:
      - schedule:
          rate: rate(5 minutes)
          enabled: true
          name: prevent-coldstart
          description: Preventing lambda cold start
      - http:
          path: /
          method: ANY
          cors:
            origin: 'https://lovelyzin.us'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              # - X-Requested-With
            allowCredentials: false
      - http:
          path: /{any+} # this matches any path, the token 'any' doesn't mean anything special
          method: ANY
          cors:
            origin: 'https://lovelyzin.us'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              # - X-Requested-With
            allowCredentials: false
    vpc:
      securityGroupIds:
        - sg-a4b5cacc
      subnetIds:
        - subnet-39bba350
        - subnet-ecacfaa1
